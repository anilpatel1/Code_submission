class Solution {
public:
    int findTheLongestSubstring(string s) {
        unordered_map<int, int> stateMap;
        int state = 0;
        stateMap[0] = -1;
        int maxLength = 0;
        
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == 'a') {
                state ^= (1 << 0);
            } else if (s[i] == 'e') {
                state ^= (1 << 1);
            } else if (s[i] == 'i') {
                state ^= (1 << 2);
            } else if (s[i] == 'o') {
                state ^= (1 << 3);
            } else if (s[i] == 'u') {
                state ^= (1 << 4);
            }
            
            if (stateMap.find(state) != stateMap.end()) {
                maxLength = max(maxLength, i - stateMap[state]);
            } else {
                stateMap[state] = i;
            }
        }       
        return maxLength;
    }
};
