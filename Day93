class Solution {
public:
    int FirstOccurence(vector<int> & nums,int target){
    int n = nums.size();
    int s=0, e=n-1;
    int ans = -1;
    for(int i=0;i<n;i++){
        int mid=(s+e)/2;
        if(nums[mid]==target){
            ans = mid;
            e=mid-1;
        }
        else if(nums[mid]<target){
            s=mid+1;
        }
        else if(nums[mid]>target){
            e=mid-1;
        }
    }
    return ans;
}
    int LastOccurence(vector<int> & nums,int target){
    int n = nums.size();
    int s=0, e=n-1;
    int ans = -1;
    for(int i=0;i<n;i++){
        int mid=(s+e)/2;
        if(nums[mid]==target){
            ans = mid;
            s=mid+1;
        }
        else if(nums[mid]<target){
            s=mid+1;
        }
        else if(nums[mid]>target){
            e=mid-1;
        }
    }
    return ans;
}
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size();
        int first = FirstOccurence(nums,target);
        int last = LastOccurence(nums,target);
        return {first,last};
    }
};
