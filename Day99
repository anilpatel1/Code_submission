// 875. Koko Eating Bananas
class Solution {
public:
    int findmax(vector<int>&piles){
        int n = piles.size();
        int maxi = INT_MIN;
        for(int i=0;i<n;i++){
            maxi = max(maxi,piles[i]);
        }
        return maxi;
    }
    int totalHours(vector<int>& piles , int hourly){
        if (hourly <= 0) return INT_MAX;
        int totalH = 0;
        int n = piles.size();
        for(int i=0;i<n;i++){
            totalH += ceil((double)piles[i] / (double)hourly);
        }
        return totalH;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int s = 0 , e = findmax(piles);
        while(s<=e){
            int mid = s+(e-s)/2;
            int totalH = totalHours(piles,mid);
            if(totalH <= h){
                e=mid-1;
            }
            else {
                s=mid+1;
            }
        }
        return s;
    }
};
