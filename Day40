class Solution {
public:
    string fractionAddition(string expression) {
        int numerator = 0, denominator = 1;  
        for (size_t i = 0; i < expression.size(); ) {
            int num = 0, den = 0, sign = 1;
            if (expression[i] == '+' || expression[i] == '-') {
                sign = expression[i] == '-' ? -1 : 1;
                i++;
            }
            while (i < expression.size() && isdigit(expression[i])) {
                num = num * 10 + (expression[i] - '0');
                i++;
            }
            num *= sign;
            i++;
            while (i < expression.size() && isdigit(expression[i])) {
                den = den * 10 + (expression[i] - '0');
                i++;
            }
            numerator = numerator * den + num * denominator;
            denominator *= den;
            int gcd = std::gcd(abs(numerator), denominator);
            numerator /= gcd;
            denominator /= gcd;
        }
        return to_string(numerator) + "/" + to_string(denominator); 
    }
};
