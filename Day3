class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        int PickP =0;
        int PickG =0;
        int PickM =0;

        int travelP=0;
        int travelG=0;
        int travelM=0;

        int lastP=0;
        int lastG=0;
        int lastM=0;

        for(int i=0;i<garbage.size();i++){
            string curr = garbage[i];
            for(int j=0;j<curr.length();j++){
                char ch = curr[j];

                if(ch =='P'){
                    PickP++;
                    lastP=i;
                }
                if(ch =='G'){
                    PickG++;
                    lastG=i;
                }
                if(ch =='M'){
                    PickM++;
                    lastM=i;
                }
            }
        }
        for(int i=0;i<lastP;i++){
            travelP += travel[i];
        }
        for(int i=0;i<lastG;i++){
            travelG += travel[i];
        }
        for(int i=0;i<lastM;i++){
            travelM += travel[i];
        }
        int ans = (PickP+travelP)+(PickG+travelG)+(PickM+travelM);
        return ans;
    }
};
