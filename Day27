class Solution {
public:
    int compareVersion(string version1, string version2) {
        vector<int> v1 = splitVersion(version1);
        vector<int> v2 = splitVersion(version2); 
        int len1 = v1.size();
        int len2 = v2.size();
        int maxLength = max(len1, len2);   
        for (int i = 0; i < maxLength; ++i) {
            int num1 = (i < len1) ? v1[i] : 0;
            int num2 = (i < len2) ? v2[i] : 0;
            if (num1 < num2) return -1;
            if (num1 > num2) return 1;
        }
        
        return 0;
    }  
private:
    vector<int> splitVersion(const string& version) {
        vector<int> parts;
        stringstream ss(version);
        string token;
        
        while (getline(ss, token, '.')) {
            parts.push_back(stoi(token));
        }
        return parts;
    }
};
