#include<iostream>
#include<vector>
using namespace std;
void wavePrintMatrix(vector<vector<int>>v){
    int n = v.size();
    int m = v[0].size();
    for(int startcol=0;startcol<m;startcol++){
        if((startcol & 1)==0){
            for(int i=0;i<n;i++){
                cout<<v[i][startcol]<<" ";
            }
        }
        else{
            for(int i = n-1; i>=0;i--){
                cout<<v[i][startcol]<<" ";
            }
        }
    }
}
int main(){
    vector<vector<int>>v{
        {1,2,3,4},
        {5,6,7,8},
        {9,10,11,12},
    };
    wavePrintMatrix(v);
    return 0;
}




class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>ans;
        int m = matrix.size();
        int n = matrix[0].size();
        int total_element = m*n;
        int count=0;

        int startingrow=0;
        int endingcol=n-1;
        int endingrow =m-1;
        int startingcol=0;

        while(count<total_element){
        for(int i=startingcol;i<=endingcol  && count<total_element ;i++){
            ans.push_back(matrix[startingrow][i]);
            count++;
        }
        startingrow++;

        for(int i=startingrow;i<=endingrow  && count<total_element ;i++){
            ans.push_back(matrix[i][endingcol]);
            count++;
        }
        endingcol--;

        for(int i=endingcol;i>=startingcol  && count<total_element ;i--){
            ans.push_back(matrix[endingrow][i]);
            count++;
        }
        endingrow--;

        for(int i=endingrow;i>=startingrow  && count<total_element ;i--){
            ans.push_back(matrix[i][startingcol]);
            count++;
        }
        startingcol++;
    }
    return ans;
    }
};
